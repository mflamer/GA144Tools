
( send this to L who is at warm )
jump --l-          ( set L's P to us )
dup dup or .       ( set his A to 0 )
! 27 for             ( get 28 cells from P and store at A )
   @p !+ unext 

      --ENDBLOCK


: trunk ( c - c 2 )
	 drop -32 + ;
	 
: trans ( c - c  trim ASCII char into 6 bit MF char 9 )
	 dup 0x00060 and .
    if ( c > 31 )
		trunk
		dup 0x00040 and . 
      if ( c > 95 )
			trunk
		then	 
	 then 
	 drop ;

: sendback     ( send a byte back up to PC 9 )
   4 for
   @p ! unext .     ( pump 5 inst cells to L )
   --l- ! . .       ( set L's A to L )
   0x1 . . .        ( have L put 1 in T )
   jump 22          ( have L jump to send word )
   ;

: bldtok       ( temporarily just trans and sendback  3 )
   sendback
   skipws 
   ;

: skipws ( 6 )
	@ trans
   if 
		bldtok
	then 
   drop . . .
   skipws 
   ;


10000 for
   . . . unext
--l- a! . .   
skipws

      --ENDFRAME --l- cold


: txBit ( t x n - t x  3 )
	!b over push . 
	jump 0xC8 
  	;

: txByte ( t x - t x  16 )
   3 txBit 
   drop . . .
   7 for 
      dup 1 and .
      3 or . . 
      txBit 
      drop . . .
      2/ next 
   2 txBit
   drop . . .
   ; 

: txCell (  3 )
   txByte
   txByte
   drop ;

: send ( n -  4 need A set to port user is pushing from  @22 )	 
   for 
      @ txByte
      drop next
   cold      

      --ENDFRAME 0 cold


#77
      --ENDFRAME --l- cold